7-base_geometry.py module
========================

Import module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

SUCCESSFUL TEST CASES:

Test values greater than 0: don't raise error or return anything:
     >>> base_geo = BaseGeometry()
     >>> base_geo.integer_validator("checkme", 10)

FAILING TEST CASES:

Test for  non-calculated area method
     >>> base_geo.area()
     Traceback (most recent call last):
     ...
     Exception: area() is not implemented

Test intgers <= 0:
     >>> base_geo.integer_validator("checkme", 0)
     Traceback (most recent call last):
     ...
     ValueError: checkme must be greater than 0

     >>> base_geo.integer_validator("checkme", -56)
     Traceback (most recent call last):
     ...
     ValueError: checkme must be greater than 0

Test values tha are not integers:
     >>> base_geo = BaseGeometry()
     >>> base_geo.integer_validator("checkme", None)
     Traceback (most recent call last):
     ...
     TypeError: checkme must be an integer

     >>> base_geo.integer_validator("checkme", "hello!")
     Traceback (most recent call last):
     ...
     TypeError: checkme must be an integer

     >>> base_geo.integer_validator("checkme", "50")
     Traceback (most recent call last):
     ...
     TypeError: checkme must be an integer

     

Test invalid/missing number of arguments:
     >>> base_geo = BaseGeometry()
     >>> base_geo.integer_validator()
     Traceback (most recent call last):
     ...
     TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

     >>> base_geo.integer_validator("age")
     Traceback (most recent call last):
     ...
     TypeError: integer_validator() missing 1 required positional argument: 'value'
